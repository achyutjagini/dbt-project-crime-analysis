


open a shell-zookeeper at localhost:2181
bin/zookeeper-server-start.sh config/zookeeper.properties



open another shell-start kafka server-kafka at localhost:9092
bin/kafka-server-start.sh config/server.properties



input topic(skip this command)
bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic streams-plaintext-input


create input topic
bin/kafka-topics.sh --create \
    --bootstrap-server localhost:9092 \
    --replication-factor 1 \
    --partitions 1 \
    --topic streams-plaintext-input


create output topic
bin/kafka-topics.sh --create \
    --bootstrap-server localhost:9092 \
    --replication-factor 1 \
    --partitions 1 \
    --topic streams-wordcount-output \
    --config cleanup.policy=compact
    
    
 start a kafka producer
 bin/kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic streams-plaintext-input
 
 
 
 verify data has been written
bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic streams-plaintext-input --from-beginning
  
  
  
  start consumer on output topic
  bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 \
    --topic streams-wordcount-output \
    --from-beginning \
    --formatter kafka.tools.DefaultMessageFormatter \
    --property print.key=true \
    --property print.value=true \
    --property key.deserializer=org.apache.kafka.common.serialization.StringDeserializer \
    --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer
 
 
 start streams application
 bin/kafka-run-class.sh org.apache.kafka.streams.examples.wordcount.WordCountDemo
 
 
 
